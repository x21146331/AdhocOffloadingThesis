/*
 * This Java source file was generated by the Gradle 'init' task.
 */


import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLConnection;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;

import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
import org.json.simple.parser.ParseException;
import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.select.Elements;



public class App {
    public static boolean checkDeviceVersion(String URLToCheck,String deviceType,String deviceVersion) {
        JSONParser parser = new JSONParser();
       
        URL releaseInfo;
        String latestOSVersion = null;
        System.out.println(java.time.LocalDate.now()); 
        Date date = new Date();
		DateFormat df = new SimpleDateFormat("yyyy-MM-dd");

		try {
			
			releaseInfo = new URL(URLToCheck);
		
			URLConnection yc = releaseInfo.openConnection();
	        BufferedReader in = new BufferedReader(new InputStreamReader(yc.getInputStream()));
	        String inputLine;  
	        while ((inputLine = in.readLine()) != null) {  
	     
	        		JSONArray apiArr=(JSONArray) parser.parse(inputLine);
	        		Date d=new Date();
	        		System.out.println(d);
	        		for(Object obj:apiArr) {
						JSONObject latestVersionObj=(JSONObject) obj;
		        		if((deviceType.equals("mobile")&&(boolean) latestVersionObj.get("eol")==false) || (deviceType.equals("computer")&&d.before(df.parse(latestVersionObj.get("eol").toString())))) {
		        			
		        		if(latestVersionObj.containsKey("latest")) {
		        			if(latestVersionObj.get("latest").equals(deviceVersion))
		        				latestOSVersion=(String) latestVersionObj.get("latest");
		        		}
		        		else if(latestVersionObj.get("cycle").equals(deviceVersion))
		        			latestOSVersion=(String) latestVersionObj.get("cycle");
		        			
		        		}
	        		}
	        		//JSONArray arr=(JSONArray) apijsonObj.get("cycle");
	        	//}
            }
            in.close();
			
		} catch (MalformedURLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} // URL to Parse
 catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (ParseException e) {
	// TODO Auto-generated catch block
	e.printStackTrace();
} catch (java.text.ParseException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		System.out.println("Latest OS Version is:"+latestOSVersion);
		if(deviceVersion.equals(latestOSVersion)) {
			return true;
		}
		return false;
     
    }
    
    public static void googleSearch() {   
    	URL url;
    try {
        //url = new URL("https://developer.android.com/about/versions");
        url = new URL("https://www.google.com/search?q=android latest version");
        HttpURLConnection connection;
        try {
            connection = (HttpURLConnection) url.openConnection();
            connection.setRequestProperty("accept", "application/json");

            try {
            	 Document document =Jsoup.connect(url.toString()).get();
            	 String output=document.html();
            	 Files.write(Paths.get("/Users/maheshprakashravi/eclipse-workspace/versionproject/app/src/main/java/versionproject/NewFile.html"),output.getBytes());
            	 Elements links = document.select("cite"); 
            	 System.out.println(links.get(0).child(0).text());
                //InputStream responseStream = connection.getInputStream();
             //  Document document = Jsoup.parse(responseStream, "UTF-8", url.toString());
                //Elements links = document.select("a[href]");  
              //  System.out.println(document);
            } catch (IOException e) {
                e.printStackTrace();
            }
        } catch (IOException e1) {
            e1.printStackTrace();
        }

    } catch (MalformedURLException e1) {
        e1.printStackTrace();
    }

    }

    public static void main(String[] args) {
    //	String deviceType="computer";
    //	String ostype="windows";
    	String deviceType="mobile";
    	String ostype="android";
    	try {
    		//googleSearch();
				//if(checkDeviceVersion("https://endoflife.date/api/"+ostype+".json",deviceType,"Windows 11, version 22H2 (E)"))
				if(checkDeviceVersion("https://endoflife.date/api/"+ostype+".json",deviceType,"5"))
					System.out.println("Security Updates supported");
				else
					System.out.println("Security Updates not supported");
				
				//ubuntu -verified-22.04.1
				//mobile android 13
				//*to check macos
				//windows Windows 11, version 22H2 (E)
		
		} catch (Exception e) {
			e.printStackTrace();
		}
    }
}
